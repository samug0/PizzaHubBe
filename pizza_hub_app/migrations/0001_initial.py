# Generated by Django 5.1.7 on 2025-04-08 17:26

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Carrelli',
                'db_table': 'Carts',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150, unique=True)),
                ('desription', models.TextField(max_length=1000, null=True)),
            ],
            options={
                'verbose_name_plural': 'Categorie',
                'db_table': 'Category',
            },
        ),
        migrations.CreateModel(
            name='Ingredients',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(max_length=1000, null=True)),
                ('price', models.FloatField()),
                ('is_available', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Ingredienti',
                'db_table': 'Ingredients',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total', models.FloatField()),
                ('approved', models.BooleanField(default=False)),
                ('preparation_estimata', models.DateTimeField(null=True)),
                ('status', models.CharField(choices=[('COMPLETED', 'Completed'), ('APPROVED', 'Approved'), ('PENDING', 'Pending'), ('REJECTED', 'Rejected')], default='PENDING', max_length=30)),
                ('is_payed', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Ordini',
                'db_table': 'Orders',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250, unique=True)),
                ('price', models.FloatField()),
                ('ingredients', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50, null=True), null=True, size=None)),
                ('description', models.TextField(max_length=1000, null=True)),
                ('is_available', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Prodotti',
                'db_table': 'Products',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(choices=[('USER', 'User'), ('ADMIN', 'Admin')], default='USER', max_length=30, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Ruoli',
                'db_table': 'Role',
            },
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total', models.FloatField()),
                ('status', models.CharField(choices=[('COMPLETED', 'Completed'), ('PENDING', 'Pending'), ('FAILED', 'Failed')], default='PENDING', max_length=30)),
                ('type', models.CharField(choices=[('CASH', 'Cash'), ('ONLINE', 'Online')], default='ONLINE', max_length=30)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pizza_hub_app.order')),
            ],
            options={
                'verbose_name_plural': 'Pagamenti',
                'db_table': 'Payments',
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pizza_hub_app.category')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pizza_hub_app.product')),
            ],
            options={
                'verbose_name_plural': 'Categorie Prodotto',
                'db_table': 'ProductCategory',
            },
        ),
        migrations.CreateModel(
            name='ProductImages',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='upload_product_image/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pizza_hub_app.product')),
            ],
            options={
                'verbose_name_plural': 'Immagini Prodotto',
                'db_table': 'ProductImages',
            },
        ),
        migrations.CreateModel(
            name='ProductIngredients',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pizza_hub_app.ingredients')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pizza_hub_app.product')),
            ],
            options={
                'verbose_name_plural': 'Ingredienti Prodotto',
                'db_table': 'ProductIngredients',
            },
        ),
        migrations.CreateModel(
            name='ProductInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_price', models.FloatField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pizza_hub_app.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pizza_hub_app.product')),
            ],
            options={
                'verbose_name_plural': 'Istanze Prodotti',
                'db_table': 'ProductInstances',
            },
        ),
        migrations.CreateModel(
            name='CartProductInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pizza_hub_app.cart')),
                ('product_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pizza_hub_app.productinstance')),
            ],
            options={
                'verbose_name_plural': 'CarrelloInstanzaProdotto',
                'db_table': 'CartProductInstances',
            },
        ),
        migrations.CreateModel(
            name='ProductInstanceIngredients',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pizza_hub_app.ingredients')),
                ('product_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pizza_hub_app.productinstance')),
            ],
            options={
                'verbose_name_plural': 'Istanze Prodotti Ingredienti',
                'db_table': 'ProductInstanceIngredients',
            },
        ),
        migrations.CreateModel(
            name='ProductPayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pizza_hub_app.payments')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pizza_hub_app.product')),
            ],
            options={
                'verbose_name_plural': 'Pagamento Prodotti',
                'db_table': 'ProductPaymets',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(blank=True, default=None, max_length=14, unique=True)),
                ('refresh_token', models.CharField(blank=True, default=None, max_length=300, null=True, unique=True)),
                ('status', models.CharField(blank=True, choices=[('CREATED', 'Created'), ('ACTIVE', 'Active'), ('INACTIVE', 'Inactive')], default='CREATED', max_length=30)),
                ('password', models.CharField(max_length=150)),
                ('phone_number', models.CharField(blank=True, max_length=14, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='upload_user_image/')),
                ('email_verified_at', models.DateTimeField(blank=True, null=True)),
                ('phone_verified_at', models.DateTimeField(blank=True, null=True)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pizza_hub_app.role')),
            ],
            options={
                'verbose_name_plural': 'Utenti',
                'db_table': 'User',
            },
        ),
        migrations.AddField(
            model_name='payments',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pizza_hub_app.user'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pizza_hub_app.user'),
        ),
        migrations.AddField(
            model_name='cart',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='pizza_hub_app.user'),
        ),
        migrations.CreateModel(
            name='BlackListToken',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('token', models.CharField(default=None, unique=True)),
                ('is_valid', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField(default=None)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pizza_hub_app.user')),
            ],
            options={
                'verbose_name_plural': 'BlackListedTokens',
                'db_table': 'BlackListedToken',
            },
        ),
    ]
